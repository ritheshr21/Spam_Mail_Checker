# -*- coding: utf-8 -*-
"""Spam_Check_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dcAus5Axrm7fq8vRvr-KRvvWPfpLP84E
"""

from google.colab import files
import pandas as pd

uploaded = files.upload()

raw_mail_df = pd.read_csv('mail_data.csv')
raw_mail_df.head()

mail_df = raw_mail_df.where(pd.notnull(raw_mail_df),'')
mail_df.head()

mail_df.loc[mail_df['Category'] == 'spam', 'Category'] = 0
mail_df.loc[mail_df['Category'] == 'ham', 'Category'] = 1

x = mail_df['Message']
x.head()

y = mail_df['Category']
y.head()

from sklearn.model_selection import train_test_split as tts
x_train, x_test, y_train, y_test = tts(x, y, test_size = 0.2, random_state = 3)

from sklearn.feature_extraction.text import TfidfVectorizer
tf = TfidfVectorizer(min_df = 1, stop_words='english', lowercase=True)
x_train_features = tf.fit_transform(x_train)
x_test_features = tf.transform(x_test)

y_train = y_train.astype('int')
y_test = y_test.astype('int')

from sklearn.linear_model import LogisticRegression
lr = LogisticRegression()
lr.fit(x_train_features, y_train)

from sklearn.metrics import accuracy_score
y_pred_train = lr.predict(x_train_features)
print("Accuracy score on training data is: ", accuracy_score(y_train, y_pred_train))
y_pred_test = lr.predict(x_test_features)
print("Accuracy Score on test data is: ", accuracy_score(y_test, y_pred_test))

def mail_checker(mail_check):

  inp_feature = tf.transform(mail_check)
  predicted = lr.predict(inp_feature)

  if predicted[0] == 0:
    print("Spam Mail")
  else:
    print("Ham Mail")

mail_check = ["free chocolates for everbody"]
mail_checker(mail_check)

mail_check = ["Thank you for attending today's meeting."]
mail_checker(mail_check)

